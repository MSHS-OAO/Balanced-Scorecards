--Future State
CREATE VIEW BSC_FUTURE_FINANCE_BASE_VIEW AS
SELECT c.FUNCTION, c.MONTH, C.EXPTYPE, c.YTD_ACTUAL_ANNUALIZED, c.LAST_12_MONTHS, c.YEAR_BUDGET FROM(
-- YTD Actual Annualized
    SELECT a.FUNCTION, a.MONTH, a.EXPTYPE, round(a.YTD_ACTUAL_ANNUALIZED,2) AS YTD_ACTUAL_ANNUALIZED, round(b.LAST_12_MONTHS, 2) AS LAST_12_MONTHS, a.YEAR_BUDGET FROM
    (
            SELECT FUNCTION, MONTH, EXPTYPE, (YTD_ACTUAL/(to_date(CONCAT(TO_CHAR(MONTH, 'yyyy-mm'),(TO_CHAR (LAST_DAY (MONTH), 'dd'))), 'yyyy-mm-dd')+1 - to_date(CONCAT(extract(year from MONTH),'-01-01'), 'yyyy-mm-dd'))) * (to_date(CONCAT(extract(year from MONTH)+1,'-01-01'), 'yyyy-mm-dd') - to_date(CONCAT(extract(year from MONTH),'-01-01'), 'yyyy-mm-dd')) AS YTD_ACTUAL_ANNUALIZED, YEAR_BUDGET  FROM(
            Select FUNCTION, MONTH, EXPTYPE, sum(SUM_OF_MONTH_ACTUAL) AS MTD_ACTUAL, sum(SUM_OF_MONTH_BUDGET) AS MTD_TARGET, sum(SUM_OF_YTD_ACTUAL) AS YTD_ACTUAL, sum(SUM_OF_YTD_BUDGET) AS YTD_TARGET, TO_NUMBER(TO_CHAR(MONTH, 'MM')) AS MONTH_NUMBER, sum(SUM_OF_ANNUAL_BUDGET) AS YEAR_BUDGET
            FROM BSC_FINANCE_TABLE
            WHERE EXPTYPE IN ('Salaries', 'Supplies') --AND Function = 'Support Services' AND TO_DATE(MONTH) = TO_DATE((Select max(MONTH)FROM BSC_FINANCE_TABLE))
            GROUP BY FUNCTION, MONTH, EXPTYPE
        )
    UNION ALL
            SELECT FUNCTION, MONTH, 'Total Expenses' AS EXPTYPE, (YTD_ACTUAL/(to_date(CONCAT(TO_CHAR(MONTH, 'yyyy-mm'),(TO_CHAR (LAST_DAY (MONTH), 'dd'))), 'yyyy-mm-dd')+1 - to_date(CONCAT(extract(year from MONTH),'-01-01'), 'yyyy-mm-dd'))) * (to_date(CONCAT(extract(year from MONTH)+1,'-01-01'), 'yyyy-mm-dd') - to_date(CONCAT(extract(year from MONTH),'-01-01'), 'yyyy-mm-dd')) AS YTD_ACTUAL_ANNUALIZED, YEAR_BUDGET FROM(
            Select FUNCTION, MONTH, sum(SUM_OF_MONTH_ACTUAL) AS MTD_ACTUAL, sum(SUM_OF_MONTH_BUDGET) AS MTD_TARGET, sum(SUM_OF_YTD_ACTUAL) AS YTD_ACTUAL, sum(SUM_OF_YTD_BUDGET) AS YTD_TARGET, TO_NUMBER(TO_CHAR(MONTH, 'MM')) AS MONTH_NUMBER, sum(SUM_OF_ANNUAL_BUDGET) AS YEAR_BUDGET
            FROM BSC_FINANCE_TABLE
            WHERE EXPTYPE IN ('Salaries', 'Supplies') --AND Function = 'Support Services' AND TO_DATE(MONTH) = TO_DATE((Select max(MONTH)FROM BSC_FINANCE_TABLE))
            GROUP BY FUNCTION, MONTH
        )
        
    ) a
    LEFT JOIN 
    --Last 12 months
    (
            Select FUNCTION, max(MONTH) AS MONTH, EXPTYPE, sum(SUM_OF_MONTH_ACTUAL) AS LAST_12_MONTHS
            FROM BSC_FINANCE_TABLE
            WHERE EXPTYPE IN ('Salaries', 'Supplies') AND TO_DATE(MONTH) >= TO_DATE((Select add_months(max(MONTH), -11) FROM BSC_FINANCE_TABLE))
            GROUP BY FUNCTION, EXPTYPE
    UNION ALL
            Select FUNCTION, max(MONTH) AS MONTH, 'Total Expenses' AS EXPTYPE, sum(SUM_OF_MONTH_ACTUAL) AS LAST_12_MONTHS
            FROM BSC_FINANCE_TABLE
            WHERE EXPTYPE IN ('Salaries', 'Supplies') AND TO_DATE(MONTH) >= TO_DATE((Select add_months(max(MONTH), -11) FROM BSC_FINANCE_TABLE))
            GROUP BY FUNCTION  
            
    ) b
    ON a.FUNCTION = b.FUNCTION AND a.MONTH = b.MONTH AND a.EXPTYPE = b.EXPTYPE
)c
    WHERE c.MONTH = TO_DATE((Select max(MONTH) FROM BSC_FINANCE_TABLE))
    
    
--- Retrospective Forecast    
CREATE VIEW BSC_RETROSPECTIVE_OUTLOOK_VIEW AS
    SELECT * FROM (
        SELECT a.FUNCTION, a.MONTH , 'Total Expenses' AS EXPTYPE, sum(RETROSPECTIVE_OUTLOOK) AS RETROSPECTIVE_OUTLOOK FROM(
        SELECT FUNCTION, MONTH, EXPTYPE, round((MTD_ACTUAL/CAST (TO_CHAR (LAST_DAY (MONTH), 'dd') AS INT))* (to_date(CONCAT(extract(year from MONTH)+1,'-01-01'), 'yyyy-mm-dd') - to_date(CONCAT(extract(year from MONTH),'-01-01'), 'yyyy-mm-dd')), 2) AS RETROSPECTIVE_OUTLOOK FROM BSC_Current_FINANCE_VIEW WHERE Month = TO_DATE((SELECT max(MONTH) FROM BSC_FINANCE_TABLE)) AND EXPTYPE = 'Salaries'
        UNION
        SELECT FUNCTION, MONTH, EXPTYPE, nullif(LAST_12_MONTHS,0) AS RETROSPECTIVE_OUTLOOK FROM BSC_FUTURE_FINANCE_BASE_VIEW WHERE Month = TO_DATE((SELECT max(MONTH) FROM BSC_FINANCE_TABLE)) AND EXPTYPE = 'Supplies'
        ) a
        GROUP BY a.FUNCTION, a.MONTH
            UNION 
        SELECT FUNCTION, MONTH, EXPTYPE, round((MTD_ACTUAL/CAST (TO_CHAR (LAST_DAY (MONTH), 'dd') AS INT))* (to_date(CONCAT(extract(year from MONTH)+1,'-01-01'), 'yyyy-mm-dd') - to_date(CONCAT(extract(year from MONTH),'-01-01'), 'yyyy-mm-dd')), 2) AS RETROSPECTIVE_OUTLOOK FROM BSC_Current_FINANCE_VIEW WHERE Month = TO_DATE((SELECT max(MONTH) FROM BSC_FINANCE_TABLE)) AND EXPTYPE = 'Salaries'
            UNION
        SELECT FUNCTION, MONTH, EXPTYPE, nullif(LAST_12_MONTHS,0) AS RETROSPECTIVE_OUTLOOK FROM BSC_FUTURE_FINANCE_BASE_VIEW WHERE Month = TO_DATE((SELECT max(MONTH) FROM BSC_FINANCE_TABLE)) AND EXPTYPE = 'Supplies'
    ) 
    

--Prospective Forecast
CREATE VIEW BSC_PROSPECTIVE_OUTLOOK_VIEW AS
SELECT * FROM(
    SELECT b.FUNCTION, b.MONTH, b.EXPTYPE, a.YTD_ACTUAL+b.SUM_OF_REMAINING_BUDGET_YTD AS PROSPECTIVE_OUTLOOK FROM(
        (SELECT FUNCTION, MONTH, EXPTYPE, YTD_ACTUAL FROM BSC_CURRENT_FINANCE_VIEW WHERE EXPTYPE IN ('Salaries', 'Supplies')) a
        RIGHT JOIN
        (SELECT FUNCTION, MONTH, EXPTYPE, sum(SUM_OF_REMAINING_BUDGET_YTD) AS SUM_OF_REMAINING_BUDGET_YTD FROM BSC_FINANCE_TABLE WHERE EXPTYPE IN ('Salaries', 'Supplies') AND Month = TO_DATE((SELECT max(MONTH) FROM BSC_FINANCE_TABLE))
        GROUP BY FUNCTION, MONTH, EXPTYPE) b
        ON a.FUNCTION = b.FUNCTION AND a.MONTH = b.Month AND a.EXPTYPE = b.EXPTYPE
    ) 
    UNION
    SELECT FUNCTION, MONTH, 'Total Expenses' AS EXPTYPE, sum(PROSPECTIVE_OUTLOOK) AS PROSPECTIVE_OUTLOOK FROM(
    SELECT b.FUNCTION, b.MONTH, b.EXPTYPE, a.YTD_ACTUAL, b.SUM_OF_REMAINING_BUDGET_YTD, a.YTD_ACTUAL+b.SUM_OF_REMAINING_BUDGET_YTD AS PROSPECTIVE_OUTLOOK FROM(
        (SELECT FUNCTION, MONTH, EXPTYPE, YTD_ACTUAL FROM BSC_CURRENT_FINANCE_VIEW WHERE EXPTYPE IN ('Salaries', 'Supplies')) a
        RIGHT JOIN
        (SELECT FUNCTION, MONTH, EXPTYPE, sum(SUM_OF_REMAINING_BUDGET_YTD) AS SUM_OF_REMAINING_BUDGET_YTD FROM BSC_FINANCE_TABLE WHERE EXPTYPE IN ('Salaries', 'Supplies') AND Month = TO_DATE((SELECT max(MONTH) FROM BSC_FINANCE_TABLE))
        GROUP BY FUNCTION, MONTH, EXPTYPE) b
        ON a.FUNCTION = b.FUNCTION AND a.MONTH = b.Month AND a.EXPTYPE = b.EXPTYPE
    ))
    GROUP BY FUNCTION, MONTH
) 

CREATE VIEW BSC_FUTURE_FINANCE_VIEW AS
SELECT a.FUNCTION, a.MONTH, a.EXPTYPE, a.YTD_ACTUAL_ANNUALIZED, LAST_12_MONTHS, YEAR_BUDGET, b.RETROSPECTIVE_OUTLOOK, a.YEAR_BUDGET - b.RETROSPECTIVE_OUTLOOK AS RETROSPECTIVE_OUTLOOK_VARIANCE_TO_BUDGET, c.PROSPECTIVE_OUTLOOK, a.YEAR_BUDGET - c.PROSPECTIVE_OUTLOOK AS PROSPECTIVE_OUTLOOK_VARIANCE_TO_BUDGET,
round((a.YEAR_BUDGET - c.PROSPECTIVE_OUTLOOK)/nullif(a.YEAR_BUDGET, 0),6) AS PROSPECTIVE_PERCENT_VARIANCE
FROM(
(SELECT * FROM BSC_FUTURE_FINANCE_BASE_VIEW) a
LEFT JOIN 
(SELECT * FROM BSC_RETROSPECTIVE_OUTLOOK_VIEW) b 
on a.FUNCTION = b.FUNCTION AND a.MONTH = b.MONTH AND a.EXPTYPE = b.EXPTYPE
LEFT JOIN
(SELECT * FROM BSC_PROSPECTIVE_OUTLOOK_VIEW) c
on a.FUNCTION = c.FUNCTION AND a.MONTH = c.MONTH AND a.EXPTYPE = c.EXPTYPE
) 
